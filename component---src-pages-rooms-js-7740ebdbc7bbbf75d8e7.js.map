{"version":3,"sources":["webpack:///./src/components/image-carousel.js","webpack:///./src/components/roomImages.js","webpack:///./src/pages/rooms.js"],"names":["Img","styled","image","ImageCarousel","props","state","currentImageIndex","lastIndex","images","edges","length","nextSlide","bind","previousSlide","getDerivedStateFromProps","nextProps","prevState","this","index","setState","render","console","log","css","fluid","node","childImageSharp","handleClick","glyph","React","Component","LeftArrow","onClick","RightArrow","RoomButton","roomsList","map","room","key","RoomImages","dormImages","kingImages","gardenImages","queenImages","sharedImages","patioImages","useState","setRoom","roomName","setRoomName","event","innerText","target"],"mappings":"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","file":"component---src-pages-rooms-js-7740ebdbc7bbbf75d8e7.js","sourcesContent":["import React from 'react';\nimport image from 'gatsby-image';\nimport styled from '@emotion/styled-base';\nimport { css } from '@emotion/core';\n\nconst Img = styled(image)``;\n\nclass ImageCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentImageIndex: 0,\n      lastIndex: this.props.images.edges.length - 1,\n    };\n    this.nextSlide = this.nextSlide.bind(this);\n    this.previousSlide = this.previousSlide.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.images.edges.length - 1 !== prevState.lastIndex) {\n      return {\n        currentImageIndex: 0,\n        lastIndex: nextProps.images.edges.length - 1,\n      };\n    } else return null;\n  }\n  // This method does not work as react renders twice. Initially it renders when it detects the props change, then after the state changes.\n  // componentDidUpdate(prevProps) {\n  // \t//this is needed so when the props is updated by the parent the state is updated as well. Otherwise lastindex remains the same as the initial props components lastIndex.\n  // \t// setState fails here as it is asynchronous\n  // \tif (prevProps.images.edges.length - 1 !== lastIndex) {\n  // \t\tthis.setState((state, props) => ({\n  // \t\t\t// currentImageIndex: 0,\n  // \t\t\tlastIndex: props.images.edges.length - 1\n  // \t\t}));\n  // \t}\n  // }\n  nextSlide() {\n    const lastIndex = this.state.lastIndex; //TODO: receive it from array length\n    const { currentImageIndex } = this.state;\n    const index = currentImageIndex === lastIndex ? 0 : currentImageIndex + 1;\n\n    this.setState({\n      currentImageIndex: index,\n    });\n  }\n  previousSlide() {\n    const lastIndex = this.state.lastIndex; // TODO receive it from array length of props\n    const { currentImageIndex } = this.state;\n    const index = currentImageIndex === 0 ? lastIndex : currentImageIndex - 1;\n\n    this.setState({\n      currentImageIndex: index,\n    });\n  }\n\n  render() {\n    console.log(\n      this.props.images.edges,\n      this.state.currentImageIndex,\n      this.state.lastIndex,\n      this.props\n    );\n    return (\n      <div\n        css={css`\n          position: relative;\n          flex-grow: 1;\n        `}\n      >\n        <Img\n          fluid={\n            this.props.images.edges[this.state.currentImageIndex].node\n              .childImageSharp.fluid\n          }\n        />\n        <LeftArrow handleClick={this.previousSlide} glyph=\"&#9664;\" />\n        <RightArrow handleClick={this.nextSlide} glyph=\"&#9654;\" />\n      </div>\n    );\n  }\n}\n\nconst LeftArrow = ({ handleClick, glyph }) => (\n  <div\n    css={css`\n      color: #14b6d4;\n      cursor: pointer;\n      font-size: 2rem;\n      position: absolute;\n      top: 50%;\n      left: 1rem;\n      min-height: 40px;\n      min-width: 40px;\n    `}\n    onClick={handleClick}\n  >\n    {glyph}\n  </div>\n);\n\nconst RightArrow = ({ handleClick, glyph }) => (\n  <div\n    css={css`\n      color: #14b6d4;\n      cursor: pointer;\n      font-size: 2rem;\n      position: absolute;\n      top: 50%;\n      right: 1rem;\n      min-height: 40px;\n      min-width: 40px;\n    `}\n    onClick={handleClick}\n  >\n    {glyph}\n  </div>\n);\n\nexport default ImageCarousel;\n","import React, { useState } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport ImageCarousel from './image-carousel';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nconst roomNames = ['Dorm', 'King', 'Queen', 'Shared', 'Patio', 'Garden'];\nconst RoomButton = styled('button')`\n  /* Room buttons can be changed if wanted */\n`;\nconst roomsList = roomNames.map(room => (\n  <RoomButton key={room}>{room}</RoomButton>\n)); // navigation list items\nconsole.log(roomsList);\nconst RoomImages = () => {\n  const {\n    dormImages,\n    kingImages,\n    gardenImages,\n    queenImages,\n    sharedImages,\n    patioImages,\n  } = useStaticQuery(graphql`\n    query {\n      dormImages: allFile(filter: { name: { regex: \"/dorm[0-9]{2}/\" } }) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n      gardenImages: allFile(filter: { name: { regex: \"/garden[0-9]{2}/\" } }) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n      kingImages: allFile(filter: { name: { regex: \"/king[0-9]{2}/\" } }) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n      queenImages: allFile(filter: { name: { regex: \"/queen[0-9]{2}/\" } }) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n      sharedImages: allFile(filter: { name: { regex: \"/shared[0-9]{2}/\" } }) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n      patioImages: allFile(filter: { name: { regex: \"/patio[0-9]{2}/\" } }) {\n        edges {\n          node {\n            childImageSharp {\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const [room, setRoom] = useState(dormImages); //Default state is set here\n  const [roomName, setRoomName] = useState('Dorm');\n  const whichRoom = event => {\n    const innerText = event.target.innerText;\n    switch (innerText) {\n      case 'Dorm':\n        console.log(innerText);\n        setRoom(dormImages);\n        setRoomName(innerText);\n        break;\n      case 'King':\n        setRoom(kingImages);\n        setRoomName(innerText);\n        console.log(innerText);\n        break;\n      case 'Queen':\n        setRoom(queenImages);\n        setRoomName(innerText);\n        console.log(innerText);\n        break;\n      case 'Garden':\n        setRoom(gardenImages);\n        setRoomName(innerText);\n        console.log(innerText);\n        break;\n      case 'Shared':\n        setRoom(sharedImages);\n        setRoomName(innerText);\n        console.log(innerText);\n        break;\n      case 'Patio':\n        setRoom(patioImages);\n        setRoomName(innerText);\n        console.log(innerText);\n        break;\n      default:\n        console.log('Does not work, try again.');\n    }\n  };\n  return (\n    <>\n      <ul onClick={whichRoom} css={css``}>\n        {roomsList}\n      </ul>\n      <ImageCarousel images={room} />\n      <p\n        css={css`\n          text-align: center;\n          font-size: 1.5rem;\n          margin-top: 1rem;\n        `}\n      >\n        {roomName === `Garden` ? roomName : roomName + ' room'}\n      </p>\n    </>\n  );\n};\n\nexport default RoomImages;\n","import React from 'react';\nimport RoomImages from '../components/roomImages';\nimport Layout from '../components/layout';\n\nexport default () => {\n  return (\n    <Layout>\n      <RoomImages />\n    </Layout>\n  );\n};\n"],"sourceRoot":""}